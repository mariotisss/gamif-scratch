Como voy a usar Django + DRF (django rest framework) para desarrollar voy a apuntar aqui la
instalacion que debo realizar tanto del entorno como del framework.

En primer lugar voy a crear un entorno virtual con venv, para no instalar todo en el local.
    Genero con  --> PS python -m venv venv
                    PS venv\Scripts\Activate

Ahora una vez que dispongo del entorno virtual, instalo Django (la version actual es 5.2,
la cual va a ser LTS hasta 2028/2029).
    Genero con  --> PS py -m pip install Django==5.2
                    PS mkdir djangotuto
                    PS django-admin startproject mysite djangotuto

Los comandos anteriores instalan Django y además crean una carpeta para testear un primer
proyecto básico que puede ayudar al entendimiento del entorno. Además, he añadido una imagen
que ayuda a entender el funcionamiento basico del Framework.
https://otosection.com/the-django-framework-explained/

-----------------------------------------------------------------------------------------------

Ahora, para comenzar inicializo el proyecto y los primeros modulos que voy a probar.
    Genero con -->  PS django-admin startproject gamification_project .
                    PS python manage.py startapp users
                    PS python manage.py startapp missions
                    PS python manage.py startapp badges

    Para JWT   -->  PS pip install djangorestframework djangorestframework-simplejwt

    Además, hay que añadir dentro de gamification_project/settings.py las apps instaladas:
                    INSTALLED_APPS = [
                        ...
                        'users',
                        'missions',
                        'badges',
                        ...
                    ]

Dentro de cada "app" voy añadiendo:
    1. Models: los modelos de datos que usará el proyecto. Importante hacer las migraciones después de crearlos.
               -->  PS python manage.py makemigrations 'module_name.py'
                    PS python manage.py migrate
    2. Serializers: se agregan manualmente. Formatear lo que se envía y recibe en raw en el body de los mensajes.
    3. Urls: endpoints usados para cada módulo. Tener en cuenta los endpoints base de "gamification_project/urls.py"
    4. Views: acoplar los serializers a los endpoints definidos.
    5. Tests: se crean tests básicos por app, usando pytest. Para mejor organización, se crean subfolders en cada
    módulo. Se testea la creación de usuarios, auth JWT, creación y finalización de misiones, obtención de badges, etc.

Para evitar hardcodear datos sensibles, uso 'django-environ' para gestionar variables de entorno (BD, JWT secret,
debug mode), y configuro settings.py para leerlas.
               -->  env = environ.Env()
                    environ.Env.read_env(os.path.join(BASE_DIR, '.env'))
                    
                    DATABASES = {
                        'default': {
                            'ENGINE': 'django.db.backends.postgresql',
                            'NAME': env('DB_NAME'),
                            'USER': env('DB_USER'),
                            'PASSWORD': env('DB_PASSWORD'),
                            'HOST': env('DB_HOST'),
                            'PORT': env('DB_PORT'),
                        }
                    }

